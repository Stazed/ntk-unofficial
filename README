This is an UNOFFICIAL fork of NTK with some minor fixes and updates.
See the git commit history for changes.

# What is NTK? #

NTK is a fork of FLTK 1.3.0 which adds graphics rendering via
Cairo, support for transparent/overlapping widgets, streamlining
of internals, and some new/improved widgets.

# LICENSING #

NTK has the same license as FLTK.

# Documentation #

Currently, there is none (beyond the FLTK 1.3 docs)

# Building #

# Dependencies #
    python=2.5-3.8  -  (for waf)
    cairo
    gcc-libs
    fontconfig
    glibc
    libfreetype.so=6-64
    libjpeg
    libpng
    libx11
    libxft
    zlib

NTK uses the 'waf' build system.
     
     Type:
         ./waf configure --help 
         
to see compilation options.

Building and installing generally goes like:

     ./waf configure
     ./waf
      su -c './waf install'

# Usage #

NTK uses pkg-config for publishing library information.

If your pkg-config cannot find the library which is installed by default to: /usr/local/lib or /usr/local/lib64
and the *.pc files in folder: /usr/local/lib/pkgconfig or /usr/local/lib64/pkgconfig you may need to add to the PKG_CONFIG_PATH.
These locations may be different depending on your distribution, or can be changed with waf.

     export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
     export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:$PKG_CONFIG_PATH
     
If you have a runtime error indicating that the libntk*.so cannot be found then you may need to
add to the LD_LIBRARY_PATH.

     export LD_LIBRARY_PATH=/usr/local/lib
     export LD_LIBRARY_PATH=/usr/local/lib64

For building with static libraries, you may need the following for proper linking.

    export CPLUS_INCLUDE_PATH="/usr/local/include/ntk/:$CPLUS_INCLUDE_PATH"
    export C_INCLUDE_PATH="/usr/local/include/ntk/:$C_INCLUDE_PATH"

